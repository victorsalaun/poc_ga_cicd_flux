name: Deploy

on:
  workflow_dispatch:
    inputs:
      integration_aws:
        description: 'Deploy to integration:aws'
        default: true
        type: boolean
      integration_azure:
        description: 'Deploy to integration:azure'
        default: true
        type: boolean
      staging_aws:
        description: 'Deploy to staging:aws'
        default: true
        type: boolean
      staging_azure:
        description: 'Deploy to staging:azure'
        default: true
        type: boolean
      production_aws_1:
        description: 'Deploy to production:aws:1'
        default: true
        type: boolean
      production_aws_2:
        description: 'Deploy to production:aws:2'
        default: true
        type: boolean
      production_azure_1:
        description: 'Deploy to production:azure:1'
        default: true
        type: boolean
      production_azure_2:
        description: 'Deploy to production:azure:2'
        default: true
        type: boolean

jobs:
  integration-aws-deploy:
    name: "Deploy to integration:aws"
    if: ${{ github.event.inputs.integration_aws == 'true' }}
    runs-on: ubuntu-latest
    environment: "integration:aws"
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Get change
        id: spec
        uses: KJ002/read-yaml@main
        with:
          file: './spec.yaml'
          key-path: '["image", "tag"]'
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: integration_aws
      - name: Apply changes
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'app.yaml'
          propertyPath: 'spec.values.image.tag'
          value: ${{ steps.spec.outputs.data }}
          branch: integration_aws
          createPR: false
          message: 'chore: Apply changes [skip ci]'
  integration-aws-deploy-validation:
    name: "Validate deployment on integration:aws"
    runs-on: ubuntu-latest
    needs:
      - integration-aws-deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  integration-azure-deploy:
    name: "Deploy to integration:azure"
    runs-on: ubuntu-latest
    environment: "integration:azure"
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Get change
        id: spec
        uses: KJ002/read-yaml@main
        with:
          file: './spec.yaml'
          key-path: '["image", "tag"]'
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: integration_azure
      - name: Apply changes
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'app.yaml'
          propertyPath: 'spec.values.image.tag'
          value: ${{ steps.spec.outputs.data }}
          branch: integration_azure
          createPR: false
          message: 'chore: Apply changes [skip ci]'
  integration-azure-deploy-validation:
    name: "Validate deployment on integration:azure"
    runs-on: ubuntu-latest
    needs:
      - integration-azure-deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  staging-aws-deploy:
    name: "Deploy to staging:aws"
    runs-on: ubuntu-latest
    environment: "staging:aws"
    needs:
      - integration-aws-deploy-validation
      - integration-azure-deploy-validation
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Get change
        id: spec
        uses: KJ002/read-yaml@main
        with:
          file: './spec.yaml'
          key-path: '["image", "tag"]'
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: staging_aws
      - name: Apply changes
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'app.yaml'
          propertyPath: 'spec.values.image.tag'
          value: ${{ steps.spec.outputs.data }}
          branch: staging_aws
          createPR: false
          message: 'chore: Apply changes [skip ci]'
  staging-aws-deploy-validation:
    name: "Validate deployment on staging:aws"
    runs-on: ubuntu-latest
    needs:
      - staging-aws-deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  staging-azure-deploy:
    name: "Deploy to staging:azure"
    runs-on: ubuntu-latest
    environment: "staging:azure"
    needs:
      - integration-aws-deploy-validation
      - integration-azure-deploy-validation
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Get change
        id: spec
        uses: KJ002/read-yaml@main
        with:
          file: './spec.yaml'
          key-path: '["image", "tag"]'
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: staging_azure
      - name: Apply changes
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'app.yaml'
          propertyPath: 'spec.values.image.tag'
          value: ${{ steps.spec.outputs.data }}
          branch: staging_azure
          createPR: false
          message: 'chore: Apply changes [skip ci]'
  staging-azure-deploy-validation:
    name: "Validate deployment on staging:azure"
    runs-on: ubuntu-latest
    needs:
      - staging-azure-deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  production-aws-1-deploy:
    name: "Deploy to production:aws:1"
    runs-on: ubuntu-latest
    environment: "production:aws:1"
    needs:
      - staging-aws-deploy-validation
      - staging-azure-deploy-validation
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Get change
        id: spec
        uses: KJ002/read-yaml@main
        with:
          file: './spec.yaml'
          key-path: '["image", "tag"]'
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: production_aws_1
      - name: Apply changes
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'app.yaml'
          propertyPath: 'spec.values.image.tag'
          value: ${{ steps.spec.outputs.data }}
          branch: production_aws_1
          createPR: false
          message: 'chore: Apply changes [skip ci]'
  production-aws-1-deploy-validation:
    name: "Validate deployment on production:aws:1"
    runs-on: ubuntu-latest
    needs:
      - production-aws-1-deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  production-aws-2-deploy:
    name: "Deploy to production:aws:2"
    runs-on: ubuntu-latest
    environment: "production:aws:2"
    needs:
      - production-aws-1-deploy-validation
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Get change
        id: spec
        uses: KJ002/read-yaml@main
        with:
          file: './spec.yaml'
          key-path: '["image", "tag"]'
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: production_aws_2
      - name: Apply changes
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'app.yaml'
          propertyPath: 'spec.values.image.tag'
          value: ${{ steps.spec.outputs.data }}
          branch: production_aws_2
          createPR: false
          message: 'chore: Apply changes [skip ci]'
  production-aws-2-deploy-validation:
    name: "Validate deployment on production:aws:2"
    runs-on: ubuntu-latest
    needs:
      - production-aws-2-deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  production-azure-1-deploy:
    name: "Deploy to production:azure:1"
    runs-on: ubuntu-latest
    environment: "production:azure:1"
    needs:
      - staging-aws-deploy-validation
      - staging-azure-deploy-validation
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Get change
        id: spec
        uses: KJ002/read-yaml@main
        with:
          file: './spec.yaml'
          key-path: '["image", "tag"]'
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: production_azure_1
      - name: Apply changes
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'app.yaml'
          propertyPath: 'spec.values.image.tag'
          value: ${{ steps.spec.outputs.data }}
          branch: production_azure_1
          createPR: false
          message: 'chore: Apply changes [skip ci]'
  production-azure-1-deploy-validation:
    name: "Validate deployment on production:azure:1"
    runs-on: ubuntu-latest
    needs:
      - production-azure-1-deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  production-azure-2-deploy:
    name: "Deploy to production:azure:2"
    runs-on: ubuntu-latest
    environment: "production:azure:2"
    needs:
      - production-azure-1-deploy-validation
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Get change
        id: spec
        uses: KJ002/read-yaml@main
        with:
          file: './spec.yaml'
          key-path: '["image", "tag"]'
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          ref: production_azure_2
      - name: Apply changes
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'app.yaml'
          propertyPath: 'spec.values.image.tag'
          value: ${{ steps.spec.outputs.data }}
          branch: production_azure_2
          createPR: false
          message: 'chore: Apply changes [skip ci]'
  production-azure-2-deploy-validation:
    name: "Validate deployment on production:azure:2"
    runs-on: ubuntu-latest
    needs:
      - production-azure-2-deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2